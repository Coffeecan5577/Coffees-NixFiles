# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "usbhid" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/4f4b16db-59ea-4871-a239-b71fe402ebf5";
      fsType = "btrfs";
    };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/f17c81e2-04cc-4429-87a7-244762dd3051";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4CEB-01B2";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

   fileSystems."/media/Nix-Storage" = 
    { device = "/dev/disk/by-uuid/aad64d8f-1030-4de2-a09c-73ebabb5808f";
      fsType = "btrfs";

      # Define which users can do what with the mounted drive:
      options = [ "nofail" ]; 
    };

    fileSystems."/media/External-Drive" = 
    { device = "/dev/disk/by-uuid/0ddfc82d-e2c8-4b98-b907-fa09bceedfd7";
      fsType = "btrfs";
   
      # Define which users can do what with the mounted drive:
      options = [ "users" "nofail" "rw" ];
    };

    fileSystems."/media/Second-External-Drive" = 
    { device = "dev/disk/by-uuid/13f05027-a1ef-4a20-ba01-6c6791cea1fb";
      fsType = "btrfs";

      options = [ "users" "nofail" "rw" ];
    };

    #Raspberry Pi SD Card slot for imaging the Pis
    fileSystems."/media/Raspberry-Pi-Imager" = 
    { device = "dev/disk/by-uuid/1a00f54f-1cd3-4830-8bc5-1cbdd8ab70c6";
      fsType = "ext4";

      options = [ "nofail" "rw" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/12c24e21-e9fa-4133-bb83-e0bd32d4fa77"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp11s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp12s0f3u2u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
